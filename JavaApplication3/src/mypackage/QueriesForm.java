/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mypackage;
import java.sql.*;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import static mypackage.SecondForm.dbConnection;
import static mypackage.SecondForm.password;
import static mypackage.SecondForm.statement;
import static mypackage.SecondForm.url;
import static mypackage.SecondForm.username;


/**
 *
 * @author maria
 */
public class QueriesForm extends javax.swing.JFrame {
      DefaultListModel dm=new DefaultListModel();
    static String driverClassName="org.postgresql.Driver";
    static String url="jdbc:postgresql://dblabs.iee.ihu.gr:5432/it174865";
    static java.sql.Connection dbConnection=null;
    static String username="it174865";
    static String password="Aa194523511378";
    static Statement statement=null;
    public static Connection c ; 
    
    /**
     * Creates new form QueriesForm
     */
   
    public QueriesForm() throws SQLException {
        c = DriverManager.getConnection(url,username,password);
        initComponents();
    }
    public java.sql.Connection connect() throws SQLException {
        return DriverManager.getConnection(url, username, password);
    }
    
    



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controlDataB = new javax.swing.JButton();
        addAnOrderB = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(905, 550));

        controlDataB.setText("CONTROL DATA");
        controlDataB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controlDataBActionPerformed(evt);
            }
        });

        addAnOrderB.setText("ADD AN ORDER");
        addAnOrderB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAnOrderBActionPerformed(evt);
            }
        });

        jButton1.setText("cheap menu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("fish full menu");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("all drinks");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("all extra");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("fish and chips");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("meet full menu");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("light menu");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(controlDataB, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addAnOrderB, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addAnOrderB, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(controlDataB, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1))
                    .addComponent(jScrollPane1))
                .addGap(55, 55, 55))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void controlDataBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_controlDataBActionPerformed
        setVisible(false);
        new SecondForm().setVisible(true);
    }//GEN-LAST:event_controlDataBActionPerformed

    private void addAnOrderBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAnOrderBActionPerformed
        setVisible(false);
        new firstForm().setVisible(true);
    }//GEN-LAST:event_addAnOrderBActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            oikonomiko();
        } catch (SQLException ex) {
            Logger.getLogger(QueriesForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
 try {
            fis();
        } catch (SQLException ex) {
            Logger.getLogger(QueriesForm.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
 try {
            pota();
        } catch (SQLException ex) {
            Logger.getLogger(QueriesForm.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
 try {
            sinod();
        } catch (SQLException ex) {
            Logger.getLogger(QueriesForm.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
 try {
            fc();
        } catch (SQLException ex) {
            Logger.getLogger(QueriesForm.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
 try {
            meet();
        } catch (SQLException ex) {
            Logger.getLogger(QueriesForm.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
 try {
            light();
        } catch (SQLException ex) {
            Logger.getLogger(QueriesForm.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

  
    public static void main(String args[]) throws SQLException {
  
            
       
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QueriesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QueriesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QueriesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QueriesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new QueriesForm().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(QueriesForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        
       
    }
    
    
   

  public void oikonomiko() throws SQLException {
     /*
      String qr = "select * from oikonomiko()" ;
      try {
          Statement statement= c.createStatement();
          ResultSet rs = statement.executeQuery(qr);
          while (rs.next()) {
              System.out.print(rs.getString("id") + " ");
                System.out.print(rs.getString("name") + " ");
                  System.out.println(rs.getString("price") + " ");
   
   
          }
          
      }catch( SQLException e ) {
        
      }
      */
        dm.clear();
        dbConnection = DriverManager.getConnection(url, username, password);
        statement = dbConnection.createStatement();

        ResultSet rs = statement.executeQuery("select * from oikonomiko()");
        while (rs.next()) {
            jList1.setModel(dm);
            String ID = rs.getString(1);
            String Name = rs.getString(2);
            String Timh = rs.getString(3);

            dm.addElement(ID + "   " + Name + "   " + Timh);

        }
        statement.close();
        dbConnection.close();
      
      
 }
  public void pota() throws SQLException {
     /*
      String qr = "select * from pota()" ;
      try {
          Statement statement= c.createStatement();
          ResultSet rs = statement.executeQuery(qr);
          while (rs.next()) {
              System.out.print(rs.getString("id") + " ");
                System.out.print(rs.getString("name") + " ");
                  System.out.println(rs.getString("price") + " ");
   
   
          }
          
      }catch( SQLException e ) {
        
      }
      
      */
        dm.clear();
        dbConnection = DriverManager.getConnection(url, username, password);
        statement = dbConnection.createStatement();

        ResultSet rs = statement.executeQuery("select * from pota()");
        while (rs.next()) {
            jList1.setModel(dm);
            String ID = rs.getString(1);
            String Name = rs.getString(2);
            String Timh = rs.getString(3);

            dm.addElement(ID + "   " + Name + "   " + Timh);

        }
        statement.close();
        dbConnection.close();
      
 }
  public void sinod() throws SQLException {
     /*
      String qr = "select * from sinod()" ;
      try {
          Statement statement= c.createStatement();
          ResultSet rs = statement.executeQuery(qr);
          while (rs.next()) {
              System.out.print(rs.getString("id") + " ");
                System.out.print(rs.getString("name") + " ");
                  System.out.println(rs.getString("price") + " ");
   
   
          }
          
      }catch( SQLException e ) {
        
      }
      */
         dm.clear();
        dbConnection = DriverManager.getConnection(url, username, password);
        statement = dbConnection.createStatement();

        ResultSet rs = statement.executeQuery("select * from sinod()");
        while (rs.next()) {
            jList1.setModel(dm);
            String ID = rs.getString(1);
            String Name = rs.getString(2);
            String Timh = rs.getString(3);

            dm.addElement(ID + "   " + Name + "   " + Timh);

        }
        statement.close();
        dbConnection.close();
      
 }
  public void meet() throws SQLException {
     /*
      String qr = "select * from meet()" ;
      try {
          Statement statement= c.createStatement();
          ResultSet rs = statement.executeQuery(qr);
          while (rs.next()) {
              System.out.print(rs.getString("id") + " ");
                System.out.print(rs.getString("name") + " ");
                  System.out.println(rs.getString("price") + " ");
   
   
          }
          
      }catch( SQLException e ) {
        
      }
      */
        dm.clear();
        dbConnection = DriverManager.getConnection(url, username, password);
        statement = dbConnection.createStatement();

        ResultSet rs = statement.executeQuery("select * from meet()");
        while (rs.next()) {
            jList1.setModel(dm);
            String ID = rs.getString(1);
            String Name = rs.getString(2);
            String Timh = rs.getString(3);

            dm.addElement(ID + "   " + Name + "   " + Timh);

        }
        statement.close();
        dbConnection.close();
      
      
 }
  public void fis() throws SQLException {
     /*
      String qr = "select * from fis()" ;
      try {
          Statement statement= c.createStatement();
          ResultSet rs = statement.executeQuery(qr);
          while (rs.next()) {
              System.out.print(rs.getString("id") + " ");
                System.out.print(rs.getString("name") + " ");
                  System.out.println(rs.getString("price") + " ");
   
   
          }
          
      }catch( SQLException e ) {
        
      }
      
      */
        dm.clear();
        dbConnection = DriverManager.getConnection(url, username, password);
        statement = dbConnection.createStatement();

        ResultSet rs = statement.executeQuery("select * from fis()");
        while (rs.next()) {
            jList1.setModel(dm);
            String ID = rs.getString(1);
            String Name = rs.getString(2);
            String Timh = rs.getString(3);

            dm.addElement(ID + "   " + Name + "   " + Timh);

        }
        statement.close();
        dbConnection.close();
      
 }
  public void light() throws SQLException {
     /*
      String qr = "select * from light()" ;
      try {
          Statement statement= c.createStatement();
          ResultSet rs = statement.executeQuery(qr);
          while (rs.next()) {
              System.out.print(rs.getString("id") + " ");
                System.out.print(rs.getString("name") + " ");
                  System.out.println(rs.getString("price") + " ");
   
   
          }
          
      }catch( SQLException e ) {
        
      }
      */
      
           dm.clear();
        dbConnection = DriverManager.getConnection(url, username, password);
        statement = dbConnection.createStatement();

        ResultSet rs = statement.executeQuery("select * from light()");
        while (rs.next()) {
            jList1.setModel(dm);
            String ID = rs.getString(1);
            String Name = rs.getString(2);
            String Timh = rs.getString(3);

            dm.addElement(ID + "   " + Name + "   " + Timh);

        }
        statement.close();
        dbConnection.close();
   
      
 }
  public void fc() throws SQLException {
     
     // String qr = "select * from fc()" ;
   /*   try {
          Statement statement= c.createStatement();
          ResultSet rs = statement.executeQuery(qr);
          while (rs.next()) {
              System.out.print(rs.getString("id") + " ");
                System.out.print(rs.getString("name") + " ");
                  System.out.println(rs.getString("price") + " ");
                  
                  jList1.setModel(rs);
   
          }
          
      }catch( SQLException e ) {
        
      }
      
      */
           dm.clear();
        dbConnection = DriverManager.getConnection(url, username, password);
        statement = dbConnection.createStatement();

        ResultSet rs = statement.executeQuery("select * from fc()");
        while (rs.next()) {
            jList1.setModel(dm);
            String ID = rs.getString(1);
            String Name = rs.getString(2);
            String Timh = rs.getString(3);

            dm.addElement(ID + "   " + Name + "   " + Timh);

        }
        statement.close();
        dbConnection.close();
   
      
 }
   
  
  
  
  
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAnOrderB;
    private javax.swing.JButton controlDataB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
